// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.App.Data;

namespace Movies.App.Data.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20221007084538_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29");

            modelBuilder.Entity("Movies.App.Data.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            DirectorId = 6,
                            ReleaseDate = new DateTime(2015, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Star Wars: The Force Awakens"
                        },
                        new
                        {
                            MovieId = 2,
                            ReleaseDate = new DateTime(2009, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Star Trek"
                        });
                });

            modelBuilder.Entity("Movies.App.Data.MovieActor", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActors");
                });

            modelBuilder.Entity("Movies.App.Data.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            NationalityId = 1,
                            Title = "British"
                        },
                        new
                        {
                            NationalityId = 2,
                            Title = "French"
                        },
                        new
                        {
                            NationalityId = 3,
                            Title = "American"
                        });
                });

            modelBuilder.Entity("Movies.App.Data.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NationalityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonId");

                    b.HasIndex("NationalityId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Birthday = new DateTime(2022, 10, 7, 9, 45, 38, 584, DateTimeKind.Local).AddTicks(9790),
                            FirstName = "Larry",
                            LastName = "Losser",
                            NationalityId = 1
                        },
                        new
                        {
                            PersonId = 2,
                            Birthday = new DateTime(1970, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Simon",
                            LastName = "Pegg",
                            NationalityId = 1
                        },
                        new
                        {
                            PersonId = 3,
                            Birthday = new DateTime(1976, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Benedict",
                            LastName = "Cumberbatch",
                            NationalityId = 1
                        },
                        new
                        {
                            PersonId = 4,
                            Birthday = new DateTime(1948, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jean",
                            LastName = "Reno",
                            NationalityId = 2
                        },
                        new
                        {
                            PersonId = 5,
                            Birthday = new DateTime(1980, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Chris",
                            LastName = "Pine",
                            NationalityId = 3
                        },
                        new
                        {
                            PersonId = 6,
                            Birthday = new DateTime(1966, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "JJ",
                            LastName = "Abrams",
                            NationalityId = 3
                        });
                });

            modelBuilder.Entity("Movies.App.Data.Movie", b =>
                {
                    b.HasOne("Movies.App.Data.Person", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Movies.App.Data.MovieActor", b =>
                {
                    b.HasOne("Movies.App.Data.Movie", "Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Movies.App.Data.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Movies.App.Data.Person", b =>
                {
                    b.HasOne("Movies.App.Data.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
